# Copyright Pravega Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Java CI

# Set up when this workflow will run.
on:
  push:
    branches:
      - main                   # On every push to the main branch.
  pull_request:                # On every pull request, regardless of source/target branch.

# Define a few constants that are shared across all the jobs (copied from Pravega workload)
env:
  GLOBAL_CACHE_PATH: |
    ~/.gradle
    ~/.m2
  GLOBAL_CACHE_KEY: gradle-m2-java-11
  GLOBAL_CACHE_RESTORE_KEYS: |
    gradle-m2-java-
    gradle-m2
  # We cache the class files, resources and build output. This is generated on the build job and reused in dependent jobs.
  # If there are subsequent builds this includes test execution.
  BUILD_CACHE_PATH: |
    .gradle
    ./bin
    **/bin
    **/build

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Build Information
        run: echo Building a '${{ github.event_name }}' for target '${{ github.ref }}'.
      - name: Checkout
        uses: actions/checkout@v2
      - name: Gradle & Maven Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.GLOBAL_CACHE_PATH}}
          key: ${{env.GLOBAL_CACHE_KEY}}
          restore-keys: ${{env.GLOBAL_CACHE_RESTORE_KEYS}}
      - name: Build Output Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.ref}}-${{github.run_id}}-${{github.job}}
          restore-keys: |
            ${{github.ref}}
      - name: Clean
        if: ${{ startsWith(github.ref, 'refs/heads/') }}
        run: ./gradlew clean ${{env.GRADLE_OPTS}}
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Build Output Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.run_id}}
      - name: Compile
        run: ./gradlew build

  integration:
    name: Integration tests
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Gradle & Maven Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.GLOBAL_CACHE_PATH}}
          key: ${{env.GLOBAL_CACHE_KEY}}
          restore-keys: ${{env.GLOBAL_CACHE_RESTORE_KEYS}}
      - name: Build Output Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.ref}}-${{github.run_id}}-${{github.job}}
          restore-keys: |
            ${{github.ref}}-${{github.run_id}}
            ${{github.ref}}
      - name: Build Output Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.run_id}}
      - name: Integration Tests
        run: ./gradlew -Pintegration test

  build_and_test_complete:
    name: CI Complete
    needs: [build, integration]
    runs-on: ubuntu-latest
    steps:
      - name: Check Build Status
        run: echo build, unit and integration tests successful.

  snapshot:
    name: Publish snapshot packages
    needs: [build_and_test_complete]
    # Only run this on PUSH (no pull requests) and only on the main branch and (future) release branches.
    # if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/r0.') || startsWith(github.ref, 'refs/heads/r1.')) }}
    # Temp comment out above 'if' statement so we can publish the artifacts and verify it works on the 'push' to the forked branch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Gradle & Maven Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.GLOBAL_CACHE_PATH}}
          key: ${{env.GLOBAL_CACHE_KEY}}
          restore-keys: ${{env.GLOBAL_CACHE_RESTORE_KEYS}}
      - name: Build Output Cache
        uses: actions/cache@v2.1.0
        with:
          path: ${{env.BUILD_CACHE_PATH}}
          key: ${{github.ref}}-${{github.run_id}}-${{github.job}}
          restore-keys: |
            ${{github.ref}}-${{github.run_id}}
            ${{github.ref}}
      - name: Assemble
        run: ./gradlew assemble --parallel ${{env.GRADLE_OPTS}}
      - name: Publish to GitHub Packages
        run: ./gradlew publish -PpublishUrl=https://maven.pkg.github.com/${{github.repository}} -PpublishUsername=${{github.actor}} -PpublishPassword=${{secrets.GITHUB_TOKEN}} ${{env.GRADLE_OPTS}}

