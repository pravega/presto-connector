/*
 * Build gradle file for the Pravega connector
 */

plugins {
    id 'java'
    id 'distribution'
    id 'maven'
}

apply from: "$rootDir/gradle/checkstyle.gradle"

repositories {
    mavenLocal()

    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }

    maven {
        url = uri('https://jitpack.io')
    }
}

dependencies {
    compile "com.facebook.airlift:bootstrap:${airliftBootstrapVersion}"
    compile "com.facebook.airlift:json:${airliftJsonVersion}"
    compile "com.facebook.airlift:log:${airliftLogVersion}"
    compile "com.facebook.airlift:configuration:${airliftConfigurationVersion}"
    compile "com.google.guava:guava:${guavaVersion}"
    compile "com.google.inject:guice:${guiceVersion}"
    compile "javax.validation:validation-api:${javaxValidationVersion}"
    compile "javax.inject:javax.inject:1"
    compile "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"

    compile "io.pravega:pravega-client:${pravegaVersion}"
    compile "io.pravega:pravega-common:${pravegaVersion}"
    compile "io.pravega:pravega-shared-protocol:${pravegaVersion}"
    compile "com.google.protobuf:protobuf-java:${protobufVersion}"
    compile "com.github.everit-org.json-schema:org.everit.json.schema:${everitJsonSchemaVersion}"
    compile "org.apache.avro:avro:${avroVersion}"
    compile "org.apache.commons:commons-lang3:${commonsVersion}"
    compile "io.pravega:schemaregistry-contract:${pravegaSchemaRegistryVersion}"
    compile "io.pravega:schemaregistry-common:${pravegaSchemaRegistryVersion}"
    compile "io.pravega:schemaregistry-client:${pravegaSchemaRegistryVersion}"
    compile "io.pravega:schemaregistry-serializers:${pravegaSchemaRegistryVersion}"
    compile "io.pravega:schemaregistry-serializers-shared:${pravegaSchemaRegistryVersion}"
    compile "io.pravega:schemaregistry-serializers-json:${pravegaSchemaRegistryVersion}"

    compile "com.facebook.presto:presto-main:${prestoVersion}"
    compile "com.facebook.presto:presto-record-decoder:${prestoVersion}"
    compile "com.facebook.presto:presto-spi:${prestoVersion}"
    compile "com.facebook.presto:presto-common:${prestoVersion}"

    compile group: 'io.netty', name: 'netty-all', version:"{nettyVersion}"

    runtimeOnly "io.airlift:joda-to-java-time-bridge:3"
    runtimeOnly "com.facebook.airlift:log-manager:${airliftLogManagerVersion}"
    runtimeOnly "org.apache.zookeeper:zookeeper:${zookeeperVersion}"
    runtimeOnly "com.101tec:zkclient:${zookeeperClientVersion}"

    testImplementation "com.facebook.presto:presto-tests:${prestoVersion}"
    testImplementation "com.facebook.airlift:testing:${airliftTestingVersion}"

    testCompile (group: 'io.pravega', name: 'pravega-standalone', version: pravegaVersion)

    compileOnly "io.airlift:slice:${airliftSliceVersion}"
    compileOnly "io.airlift:units:${airliftUnitsVersion}"
    compileOnly "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    compileOnly "org.openjdk.jol:jol-core:0.2"
}

group = 'io.pravega'
version = '0.1.0'
description = 'Pravega SQL :: Pravega PrestoDB Connector'
sourceCompatibility = '1.8'

task copyDependentJars(type: Copy) {
    from configurations.runtime
    into "$buildDir/plugin/libs/pravega"
}

jar {
    baseName = 'pravega-connector'
    destinationDir = file("$buildDir/plugin/libs/pravega")
    manifest {
        attributes "Main-Class": "com.facebook.presto.pravega"
    }
}

plugins.withType(DistributionPlugin) {
    distTar {
        compression = Compression.GZIP
        extension = 'tar.gz'
    }
}

distributions {
    main {
        contents {
            distributionBaseName = 'pravega-presto-connector'
            from jar
        }
    }
}

def integration = project.hasProperty("integration")

test {
    maxHeapSize = "2048m"
    useTestNG() {
        suites "src/test/unit-test.xml"
        if (integration) {
            suites "src/test/integration-test.xml"
        }
    }
}

jar.dependsOn(copyDependentJars)
